<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TPG.DrawObjects.ClientUtils</name>
    </assembly>
    <members>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.CreateFromTemplate(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.CreateFrom2525cHierarchyCode(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.CreateFromTypeId(System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.FitToViewport(TPG.GeoFramework.Contracts.IViewport,TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetTypeId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetHierarchyCode(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetHierarchyCodes">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetTypeDefinitions">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetPolyArea(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetPolyAreaBasedTriangle(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetPolyAreaBasedRectangle(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetText(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetEllipse(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetPolyLine(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetFanArea(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetRangeRings(System.String)">
            <inhertidoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetOrbitArea(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetVolumeOrbitArea(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetLane(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetVolumeLane(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetSymbol(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetCrossHairs(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataFactory.GetTypeDefinitionNameFromTypeId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetLineColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="lineColor">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetLineColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFillBackgroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the background color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fillBackgroundColor">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetFillBackgroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the background color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFillForegroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the fill color to use when rendering filled standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fillForegroundColor">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetFillForegroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the fill color to use when rendering filled standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBufferLineColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="bufferLineColor">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetBufferLineColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFontBackgroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the font background color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="color">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetFontBackgroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the font background color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFontForegroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.Color)">
            <summary>
            Sets the font forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="color">The color to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetFontForegroundColor(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the font forground color to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetLineWidth(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Double)">
            <summary>
            Sets the line width to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="width">The line width to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetLineWidth(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Sets the outline width to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetLineDashStyle(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.DashStyle)">
            <summary>
            Sets the outline dash style to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="dashStyle">The dash style to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetLineDashStyle(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the outline dash style to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetNumberOfRadials(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Int32)">
            <summary>
            Sets the number of radials field for range rings draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="numberOfRadials">The number of radials to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetShowLinePointText(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Get show line point text field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The show line point text field.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetShowLinePointText(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the show line point text value for draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="showLinePointText">The show line point text value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetNumberOfRadials(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Get the number of radials field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The number of radials field.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetText(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.String)">
            <summary>
            Sets the text field for standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="text">The text to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetText(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Get the text field.
            </summary>
            <param name="drawObjectData"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetWrapLines(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the wrap lines property.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData.</param>
            <param name="wrapLines">Bool value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetWrapLines(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the wrap lines field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBoldFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the bold font property.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData.</param>
            <param name="bold">Bool value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetBoldFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets bold font field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetItalicFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the italic font property.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData.</param>
            <param name="italic">Bool value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetUnderlineFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the underline font property.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData.</param>
            <param name="underline">Bool value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetStrikethroughFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets the strikethrough font property.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData.</param>
            <param name="strikethrough">Bool value to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetItalicFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets italic font field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetUnderlienFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets underline font field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetStrikethroughFont(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets strikethrough font field.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetSymbolType(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.String)">
            <summary>
            Sets the symbol type field for standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="symbolType">The symbol type to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetSymbolCode(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.String)">
            <summary>
            Sets the symbol code field for standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="symbolCode">The symbol code to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetDefaultFontName(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.String)">
            <summary>
            Sets the font name to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fontName">The font name to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetDefaultFontSize(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Single)">
            <summary>
            Sets the font size to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fontSize">The font size to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFillStyle(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Internals.Contracts.Views.FillStyle)">
            <summary>
            Sets the fill style to use when rendering standard draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fillStyle">The fill style to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetDrawOutline(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Sets if the outline of the figure should be drawn.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="drawOutline">The flag to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetFill(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Enable/disable filling of polygonal draw objects.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="fill">The flag to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetShowBuffer(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Enable/disable buffer zone around draw object.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="showBuffer">The flag to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBufferLineDashStyle(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Windows.Media.DashStyle)">
            <summary>
            Sets the dash style for the buffer zone.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="dashStyle">The dash style to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetBufferLineDashStyle(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the dash style for the buffer zone.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBufferLineWidth(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Double)">
            <summary>
            Sets the line width for the buffer zone.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="width">The line width to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBufferWidth(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Double)">
            <summary>
            Sets the width for the buffer zone area.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="width">The area width to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetBufferWidth(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the width for the buffer zone area.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetOrbitAreaFigureType(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Internals.Contracts.Rendering.PartRendererParameterTypes.OrbitAreaFigureType)">
            <summary>
            Sets how the orbit area should be rendered.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="figureType">The figure type to use.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetSmooth(TPG.DrawObjects.Contracts.Data.IDrawObjectData,System.Boolean)">
            <summary>
            Enable/disable smoothing of lines with spline rendering.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="smooth">The flag to set.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetSmooth(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the value for smoothing
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The smoothing value.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetOrbitAreaDirection(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Internals.Contracts.Rendering.PartRendererParameterTypes.OrbitAreaDirection)">
            <summary>
            Sets the direction of the orbit area.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="direction">Direction to use.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetBeginLineEndingFigure(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Types.LineEndingFigure)">
            <summary>
            Sets the figure to use for the beginning of a line.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="figure">The figure to use.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetBeginLineEndingFigure(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the figure to use for the beginning of a line.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The figure in use.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.SetEndLineEndingFigure(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Types.LineEndingFigure)">
            <summary>
            Sets the figure to use for the end of a line.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <param name="figure"></param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.DrawObjectDataStyleProperties.GetEndLineEndingFigure(TPG.DrawObjects.Contracts.Data.IDrawObjectData)">
            <summary>
            Gets the figure to use for the end of a line.
            </summary>
            <param name="drawObjectData">Extension method on this drawObjectData</param>
            <returns>The figure in use.</returns>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.Version">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.Name">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.ExtraFields">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.DrawDepth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.RotationAngle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DataFields.Smooth">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateTacticalGraphic(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,System.String,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create a tactical graphic object from a hierarchy code.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="hierarchyCode">2525C Hierarchy Code</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic of the correct type with no default data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateTacticalGraphicInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,System.String,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create a tactical graphic object from a hierarchy code and place it in the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="hierarchyCode">2525C Hierarchy Code</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic of the correct type with no default data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreatePolyArea(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create polygon area generic graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreatePolyAreaInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create polygon area generic graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreatePolyLine(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create polyline area generic graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreatePolyLineInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create polyline area generic graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateEllipse(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create ellipse generic graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateEllipseInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create ellipse generic graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateFanArea(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create fan area generic graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateFanAreaInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create fan area generic graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateRangeRings(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic range rings graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateRangeRingsInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic range rings graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateOrbitArea(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic orbit area graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateOrbitAreaInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic orbit area graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateVolumeOrbitArea(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic orbit area graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateVolumeOrbitAreaInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic volume orbit area graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateLane(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic Lane graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateLaneInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic Lane graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateCrossHairs(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic Cross Hairs graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateCrossHairsInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic Cross Hairs graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateVolumeLane(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic volume lane graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateVolumeLaneInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic volume lane graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateSymbol(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Create generic Symbol graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateSymbolInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.GeoFramework.Contracts.IViewport,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic Symbol graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="centerGeo">Optional center point for the SimpleDrawObject. If no center is given, the center of the viewport is assumed.</param>
            <returns>ISimpleDrawObject with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateText(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,System.String)">
            <summary>
            Create generic text graphics object.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObjects</param>
            <param name="text">Initial text in the text object</param>
            <returns>ISimpleDrawObject with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.CreateTextInViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,System.String,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Create generic text graphics object placed within the given viewport.
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObjectFactory">Factory for ISimpleDrawObject</param>
            <param name="text">Initial text in the text object</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>ITacticalGraphic with IGenericGraphic containing a generic draw object without any data.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.FitToViewport(TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject,TPG.GeoFramework.Contracts.IViewport,System.Double,System.Nullable{TPG.GeoUnits.GeoPos})">
            <summary>
            Utility method to place a TacticalGraphic in a given viewport
            </summary>
            <param name="drawObjectDataFactory">Factory for DrawObjectData</param>
            <param name="simpleDrawObject">Input tactical graphic data.</param>
            <param name="viewport">Viewport to place the data in.</param>
            <param name="relSize">Size relative to the viewport size. 0.5 is half the viewport.</param>
            <param name="centerGeo">Optional center point for the TacticalGraphic. If no center is given, the center of the viewport is assumed.</param>
            <returns>TacticalGraphic object placed in the viewport.</returns>
            <remarks>If you want to create and place a tactical graphic in the viewport, use CreateTacticalGraphicInViewport instead, since it is more efficient. 
            This method assumes that the ITacticalGraphic object is valid with an IGenericGraphic if applicable.</remarks>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectDataFactoryExtensions.ClearDefaultData(TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject)">
            <summary>
            Clears default data from the ITacticalDataFields member.
            </summary>
            <param name="simpleDrawObject">The simple draw object to clear default data from.</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.GetFromStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Get TacticalGraphic from Draw Object store.
            </summary>
            This method will retrieve a draw object from the store and fill out the given ITacticalGraphic.
            The tacticalGraphic object must be of the correct type, its Id must be set to an existing
            draw object in the store, and a IDataFields must be set to the correct type else an exception will be thrown.
            <param name="layerViewModel">The layer to get draw object from.</param>
            <param name="simpleDrawObject">An ITacticalGraphic of correct type with a valid Id.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.GetFromStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,System.String,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Get TacticalGraphic from DrawObject store.
            </summary>
            Convenience method. Same as above, only that you specify the ObjectId explicitly instead of through the 
            tacticalGraphic.Id parameter.
            <param name="layerViewModel">The layer to get draw object from.</param>
            <param name="objectId">A valid DrawObject instance ID.</param>
            <param name="simpleDrawObject">An ITacticalGraphic of correct type with a valid Id.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.GetFromStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,System.String,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Get a new tactical graphic object from the store.
            </summary>
            This method will read the draw object with the given objectId from the store, construct a new ITacticalGraphic 
            using the injected factory and return it.
            <param name="layerViewModel">The draw object layer containing the draw object.</param>
            <param name="objectId">A valid Object ID</param>
            <param name="simpleDrawObjectFactory">A factory to create ITacticalGraphic objects.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
            <returns>A new ITacticalGraphic of the correct type corresponding with the object in the store.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.GetSortedFromStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,TPG.GeoFramework.Style.Core.Contracts.Condition.ICondition,System.Collections.Generic.IList{TPG.GeoFramework.Style.Core.Contracts.Sorting.SortInfoItem},System.Int32,System.Int32,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Get draw objects sorted by specified field(s).
            </summary>
            This method will read the draw objects from the store, construct new ITacticalGraphics
            using the injected factory and return them.
            <param name="layerViewModel">The draw object layer containing the draw object.</param>
            <param name="query">Query for selecting sorted draw objects. Selected draw objects can be offset from start of
            sort order. THe specified number of draw objects can be lower than the total count.</param>
            <param name="sortItems">List of sort items containing sorting info.</param>
            <param name="offset">Offset into the set of draw objects to be returned.</param>
            <param name="maxCount">Maximum count of draw objects to be returned.</param>
            <param name="simpleDrawObjectFactory">A factory to create ITacticalGraphic objects.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
            <returns>A new ITacticalGraphic of the correct type corresponding with the object in the store.</returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.UpdateStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,System.Boolean)">
            <summary>
            Save a TacticalGraphic to the draw object store.
            </summary>
            This method will update the store with the given TacticalGraphic object. If the corresponding 
            draw object (with the same Id) exists in the store, it will be updated with values from TacticalGraphic.
            If not, a new DrawObject will be created. If no Id is set in the TacticalGraphic, the TacticalGraphic 
            Id will be set to the new DrawObject InstanceId.
            <param name="layerViewModel">Layer to store the object in.</param>
            <param name="simpleDrawObject">TacticalGraphic to store.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
            <param name="validateBeforeStore">If set to true simpleDrawObject will be validated before storing. If validation fails the object will not be stored. 
            If set to false  no validation is performed.</param>
            <exception cref="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidationException">Exception thrown if validation of draw object fails during store operation.</exception>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectLayerViewModelExtensions.UpdateStore(TPG.GeoFramework.DrawObjectLayer.Contracts.IDrawObjectLayerViewModel,System.Collections.Generic.IEnumerable{TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject},TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,System.Boolean)">
            <summary>
            Save a list of TacticalGraphics to the draw object store.
            </summary>
            This method will update the store with the given TacticalGraphic objects. If the corresponding 
            draw object (with the same Id) exists in the store, it will be updated with values from TacticalGraphic.
            If not, a new DrawObject will be created. If no Id is set in the TacticalGraphic, the TacticalGraphic 
            Id will be set to the new DrawObject InstanceId.
            <param name="layerViewModel">Layer to store the object in.</param>
            <param name="tacticalGraphicList">TacticalGraphic to store.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
            <param name="validateBeforeStore">If set to true simpleDrawObject will be validated before storing. If validation fails the object will not be stored. 
            If set to false  no validation is performed.</param>
            <exception cref="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidationException">Exception thrown if validation if draw objects fail during store operation.</exception>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapFrom(TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.IPoint,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Convert an IGenericTacticalGraphic to IDrawObjectData.
            </summary>
            <param name="simplePoint"></param>
            <param name="drawObjectDataFactory"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapFrom(TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.ILine,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Convert an ILine to IDrawObjectData.
            </summary>
            <param name="simpleLine"></param>
            <param name="drawObjectDataFactory"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapFrom(TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.IPolygonArea,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory)">
            <summary>
            Convert an IGenericTacticalGraphic to IDrawObjectData.
            </summary>
            <param name="simplePolygon"></param>
            <param name="drawObjectDataFactory"></param>
            <returns></returns>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapTo(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.IPoint,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Convert an IDrawObjectData to an IGenericTacticalGraphic.
            </summary>
            Converts an IDRawObjectData with IPolygonArea, ILine or IGeoPoint primitives
            to an IGenericTacticalGraphic.
            <param name="drawObjectData"></param>
            <param name="simplePoint"></param>
            <param name="drawObjectDataFactory"></param>
            <param name="simpleDrawObjectFactory"></param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapTo(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.ILine,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Convert an IDrawObjectData to an IGenericTacticalGraphic.
            </summary>
            Converts an IDRawObjectData with IPolygonArea, ILine or IGeoPoint primitives
            to an IGenericTacticalGraphic.
            <param name="drawObjectData"></param>
            <param name="simpleLine"></param>
            <param name="drawObjectDataFactory"></param>
            <param name="simpleDrawObjectFactory"></param>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.DrawObjectMapper.MapTo(TPG.DrawObjects.Contracts.Data.IDrawObjectData,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.Primitives.IPolygonArea,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObjectFactory)">
            <summary>
            Convert an IDrawObjectData to an IGenericTacticalGraphic.
            </summary>
            Converts an IDRawObjectData with IPolygonArea, ILine or IGeoPoint primitives
            to an IGenericTacticalGraphic.
            <param name="drawObjectData"></param>
            <param name="simplePolyArea"></param>
            <param name="drawObjectDataFactory"></param>
            <param name="simpleDrawObjectFactory"></param>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidationException">
            <summary>
            Exception thrown when validation fails.
            </summary>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidationException.FailedValidation">
            <summary>
            List of ISimpleDrawObjects that does not validate.
            </summary>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.LineColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.LineDashStyle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.LineDashStyleOffset">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.LineWidth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.DrawOutline">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Fill">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FillForegroundColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FillBackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FillStyle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.ShowBuffer">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BufferLineColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BufferLineDashStyle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BufferLineDashStyleOffset">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BufferLineWidth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BufferWidth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Text">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.WrapLines">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FontName">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FontSize">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FontForegroundColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Bold">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Italic">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Underline">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.Strikethrough">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.FontBackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.NumberOfRadials">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.BeginLineEndingFigure">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.EndLineEndingFigure">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.ShowLinePointText">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.SymbolType">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.SymbolCode">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.OrbitAreaDirection">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.GenericDataFields.OrbitAreaFigureType">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.Id">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.DataFields">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.GenericDataFields">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.TacticalDataFields">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObject.Points">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Line.GetLength">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.PolygonArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.PolygonArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea">
            <summary>
            An volume centered horizontally around a line with two or more points, 
            defined by its width equally distibuted on each side of the center line.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea.Width">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea.LowerVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolCorridorArea.UpperVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.CorridorArea">
            <summary>
            An area centered around a line with two or more points, 
            defined by its width equally distibuted on each side of the center line.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.CorridorArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.CorridorArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.CorridorArea.Width">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse">
            <summary>
            Ellipse-shaped surface with arbitrary rotation.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse.CentrePoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse.FirstConjugateDiameterPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.Ellipse.SecondConjugateDiameterPoint">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea">
            <summary>
            A fan area is a surface in the form of a truncated ring sector. It is defined by a centre point, a sector angle, innner and outer radii.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.MinimumRange">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.MaximumRange">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.OrientationAngle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.SectorSizeAngle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.FanArea.VertexPoint">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.OrbitArea">
            <summary>
            A rectangular area closed by two half-circles. The orbit is determined by an axis defined by two points, 
            a width perpendicular to the axis, and an enum describing how the orbit relates to the axis line. 
            If it is a Centre orbit, the orbit has its axis along the center of the rectangular area. If it is a Left orbit, the orbit 
            is located to the left of the axis line with the axis itself as the right leg of the orbit. Conversely if it 
            is a Right orbit, the orbit is placed to the right of the axis line with the axis line as the left leg.
            Left and right of the axis is defined by the direction of the axis which is from FirstPoint to SecondPoint.
            </summary>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.OrbitArea.FirstPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.OrbitArea.SecondPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.OrbitArea.Width">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.OrbitArea.OrbitAreaAligmentCode">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse">
            <summary>
            Ellipse-shaped volume surface with arbitrary rotation.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.LowerVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.UpperVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.CentrePoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.FirstConjugateDiameterPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolEllipse.SecondConjugateDiameterPoint">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea">
            <summary>
            A volume fan area is a volume with a surface in the form of a truncated ring sector. It is defined by a centre point, a sector angle, innner and outer radii.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.MinimumRange">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.MaximumRange">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.OrientationAngle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.SectorSizeAngle">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.VertexPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.LowerVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolFanArea.UpperVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.FirstPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.SecondPoint">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.Width">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.OrbitAreaAligmentCode">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.LowerVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolOrbitArea.UpperVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolPolyArea">
            <summary>
            A volume with a polygonal base surface.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolPolyArea.GetArea">
            <inheritdoc/>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolPolyArea.GetLength">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolPolyArea.LowerVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.Primitives.VolPolyArea.UpperVerticalDistance">
            <inheritdoc/>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidatorExtensions">
            <summary>
            Provides extension methods on ISimpleDrawObject providing validation.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SimpleDrawObjectValidatorExtensions.Validate(TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject,TPG.DrawObjects.Contracts.Data.Utils.DataProviders.IDrawObjectDataFactory,TPG.DrawObjects.Contracts.Data.Validation.IDrawObjectPrimitiveValidatorFactory,System.Boolean)">
            <summary>
            Extension method that validates the data.
            </summary>
            <param name="simpleDrawObject">The data to validate.</param>
            <param name="drawObjectDataFactory">Data factory for DrawObjectData</param>
            <param name="drawObjectValidatorFactory">Factory for creating primitive validators, if null the default implementation will be used.</param>
            <param name="returnOnFirstError">If true validation returns on first error, if false validation will report all errors found.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="T:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SortedSimpleDrawObjectInfo">
            <summary>
            Contains result of sorted draw object query.
            </summary>
        </member>
        <member name="M:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SortedSimpleDrawObjectInfo.#ctor(System.Collections.Generic.IEnumerable{TPG.DrawObjects.Contracts.SimpleDrawObjectAPI.ISimpleDrawObject},System.Int32,TPG.GeoFramework.Style.Core.Contracts.Condition.ICondition)">
            <summary>
            Constructor.
            </summary>
            <param name="sortedDrawObjects">List of sorted draw objects.</param>
            <param name="totalDrawObjectCount">Total draw object count.</param>
            <param name="query">Draw object query.</param>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SortedSimpleDrawObjectInfo.SortedDrawObjects">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SortedSimpleDrawObjectInfo.TotalDrawObjectCount">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.SortedSimpleDrawObjectInfo.Query">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.HierarchyCode">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.StandardIdentity">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.MinefieldContent">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.MinefieldPattern">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.MinefieldOpacity">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.SymbolIndicator">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.Echelon">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.AdditionalInformation">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.UniqueDesignation">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.DateTimeGroup">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.TacticalStatus">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.OffsetLocationDisplacement">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.Quantity">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.NuclearWeaponType">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.DirectionOfMovement">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.AltitudeDepth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.Distance">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.TacticalDataFields.Azimuth">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.VerticalDistanceData.UnitType">
            <inheritdoc/>
        </member>
        <member name="P:TPG.DrawObjects.ClientUtils.SimpleDrawObjectAPI.VerticalDistanceData.Dimension">
            <inheritdoc/>
        </member>
    </members>
</doc>
